[ { filename: '2015-03-26-Linux-Scanning-Technique.md',
    path: '/2015/03/26/Linux-Scanning-Technique.html',
    title: undefined,
    content: ' 扫描技术[Study Address](http://imooc.com/video/6629) 1. 概述 1.互联网安全: 数据的真实、可靠、完整、可控 2. 命令:',
    archieve: '2015/03',
    category: 'linux',
    tags: undefined },
  { filename: '2015-03-26-iptables-useage.md',
    path: '/2015/03/26/iptables-useage.html',
    title: undefined,
    content: ' 将来自 10.4.143.0/24 的tcp数据指向 64.111.96.38```bashiptables -t nat -I PREROUTING -s 10.4.143.0/24 -p tcp -j DNAT --to-destination 64.111.96.38```',
    archieve: '2015/03',
    category: 'linux',
    tags: [ 'linux', 'command', 'iptables' ] },
  { filename: '2015-03-28-cole-smith.md',
    path: '/2015/03/28/cole-smith.html',
    title: undefined,
    content: ' Home For Cole Smith',
    archieve: '2015/03',
    category: 'say-something',
    tags: undefined },
  { filename: '2015-03-29-android-封装GetPost.md',
    path: '/2015/03/29/android-封装GetPost.html',
    title: undefined,
    content: ' 为了方便，自己封装了一个 Google 好像有更好的，还没用起来，先用用自己封装的, 以下是源码```javaimport android.annotation.TargetApi;import android.os.Build;',
    archieve: '2015/03',
    category: 'java',
    tags: [ 'java', 'android', 'http', 'get', 'post' ] },
  { filename: '2015-03-29-php-start-note.md',
    path: '/2015/03/29/php-start-note.html',
    title: undefined,
    content: ' PHP 入门篇 1.语法 1. PHP代码卸载`<?php` 和 `?>`之间, 但注意后面的 `?>` 是可以省略的; 2. Echo 语句: 注意`php语句以 ; 结束`   作用: 1. 输出字符串: echo "Hello"; 2. 输出表达式结果: echo 23+56;',
    archieve: '2015/03',
    category: 'php',
    tags: [ 'php', 'notes' ] },
  { filename: '2015-03-30-phpstorm-install-and-use.md',
    path: '/2015/03/30/phpstorm-install-and-use.html',
    title: undefined,
    content: '',
    archieve: '2015/03',
    category: undefined,
    tags: [ 'linux', 'php', 'tools' ] },
  { filename: '2015-04-01-Head-First-SQL.md',
    path: '/2015/04/01/Head-First-SQL.html',
    title: undefined,
    content: ' 1. SQL 创建篇 1. 创建数据库: CREATE DATABASE dbname; 2. 使用数据库: USE dbname 3. 创建表:    ```bash',
    archieve: '2015/04',
    category: 'SQL',
    tags: [ 'sql', 'mysql', 'note' ] },
  { filename: '2015-04-01-gitcafe-pages.md',
    path: '/2015/04/01/gitcafe-pages.html',
    title: undefined,
    content: '',
    archieve: '2015/04',
    category: 'git',
    tags: [ 'git', 'gitcafe', 'blog', 'gitcafe-pages', 'github.io' ] },
  { filename: '2015-04-01-linux-tar.md',
    path: '/2015/04/01/linux-tar.html',
    title: undefined,
    content: ' Tar 用法:     虽然一直都在用这个命令，但是一般也只是解压、压缩，并没有用到其他     今天好好写点常用的的用法 先讲讲常用选项:     -c 创建一个新归档，也就是压缩啦',
    archieve: '2015/04',
    category: 'linux',
    tags: [ 'linux', 'command' ] },
  { filename: '2015-04-02-Ubuntu-LAMP.md',
    path: '/2015/04/02/Ubuntu-LAMP.html',
    title: 'Ubuntu Server 配置 LAMP',
    content: ' 1. Environment 1. Ubuntu 14.10 Server 2. LAMP = Linux + Apache + Mysql/MariaDB + PHP 2. INSTALLATION 1. Apache:',
    archieve: '2015/04',
    category: 'php',
    tags: [ 'php', 'server', 'lamp' ] },
  { filename: '2015-04-04-PHP-Object-Oriented.md',
    path: '/2015/04/04/PHP-Object-Oriented.html',
    title: 'PHP 面向对象',
    content: ' 1. 面向对象(Object Oriented)基本概念 1. 对象的定义:     世间万物皆对象: 可见和不可见之物 2. 对象的基本组成, 包含两部分:     1. (属性，成员变量)对象的组成元素:',
    archieve: '2015/04',
    category: 'php',
    tags: [ 'php', 'Object-Oriented', 'OO', '面向对象' ] },
  { filename: '2015-04-05-linux-on-android.md',
    path: '/2015/04/05/linux-on-android.html',
    title: 'adb 简单运用之启动LinuxOnAndroid',
    content: ' 0. 原因: LinuxOnAndroid    > 主要是因为自己有架Android手机主板出问题了，屏幕一直花屏，就想拿来玩玩LinuxOnAndroid, 但是屏幕花屏严重，基本看不了，但是偶尔恢复，所以就想从adb shell 来启动LinuxOnAndroid, 我用的是Ubuntu12.04版本, 适合android4.0-4.2, 可以拿来玩服务。。。 1. 手机:     1. 打开Debug模式，并用数据线连接电脑     2. 最好确保手机已经root',
    archieve: '2015/04',
    category: 'android',
    tags: [ 'adb', 'shell', 'android', 'LinuxOnAndroid', 'Ubuntu' ] },
  { filename: '2015-04-07-renew-ubuntu-14-04-kernel.md',
    path: '/2015/04/07/renew-ubuntu-14-04-kernel.html',
    title: '为 ubuntu 14.04 上 4.0 kernel',
    content: ' 原因: 内核太老，强迫症，想换内核，但是又不想自己编译，毕竟对内核不了解，并且编译过程中有各种问题...所以，就从官方已经编译打包好的包来安装... 1. 下载 需要的 image, header等文件(3个): [linux-headers-4.0.0-040000rc7_4.0.0-040000rc7.201504061936_all.deb](http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.0-rc7-vivid/linux-headers-4.0.0-040000rc7_4.0.0-040000rc7.201504061936_all.deb) [linux-headers-4.0.0-040000rc7-generic_4.0.0-040000rc7.201504061936_amd64.deb](http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.0-rc7-vivid/linux-headers-4.0.0-040000rc7-generic_4.0.0-040000rc7.201504061936_amd64.deb)',
    archieve: '2015/04',
    category: 'linux',
    tags: [ 'linux', 'ubuntu', 'ubuntu14.04', 'kernel' ] },
  { filename: '2015-04-07-shadowsocks-global-by-iptables.md',
    path: '/2015/04/07/shadowsocks-global-by-iptables.html',
    title: 'Linux Shadowsocks 全局代理',
    content: ' Linux用 iptables + ss-redir 为 Shadowsocks 全局代理 [Shell脚本下载地址]({{site.url}}/scripts/linux-shdowsocks-global.sh) 1. create new chain on nat table iptables -t nat -N SHADOWSOCKS 2. Ignore shdowsocks\'s address, avoid loop iptables -t nat -A SHADOWSOCKS -d YOUR-SERVER-IP -j RETURN',
    archieve: '2015/04',
    category: 'linux',
    tags: [ 'linux', 'ubuntu', 'shadowsocks', 'iptables' ] },
  { filename: '2015-04-08-iptables-basic.md',
    path: '/2015/04/08/iptables-basic.html',
    title: 'Iptables 基础',
    content: ' 参考 [Man Page](http://linux.die.net/man/8/iptables) [Arch Wiki](https://wiki.archlinux.org/index.php/Iptables) 1. IPTABLES 命令的基础 One IPTABLES 规则的基本格式:',
    archieve: '2015/04',
    category: 'linux',
    tags: [ 'linux', 'ubuntu', 'iptables', 'command' ] },
  { filename: '2015-04-10-lvmlogical-volume-manager.md',
    path: '/2015/04/10/lvmlogical-volume-manager.html',
    title: 'LVM: Logical Volume Manager',
    content: ' LVM: 逻辑卷管理 1. 概念|缩写|全称|中文||:---|:---|:---||PE|Physical Extend|物理扩展|',
    archieve: '2015/04',
    category: 'linux',
    tags: [ 'linux', 'lvm', 'filesystem' ] },
  { filename: '2015-04-11-apache24-403-forbidden.md',
    path: '/2015/04/11/apache24-403-forbidden.html',
    title: 'apache2.4: You don\'t have permission to access / on this server.',
    content: ' 1. 檢查權限 1. 用戶和組的配置```bash   sudo vim /etc/apache2/apache2.conf 找到 User 和 Group发现配置用户和组的文件在/etc/apache2/envvars',
    archieve: '2015/04',
    category: 'php',
    tags: [ 'linux', 'php', 'apache2' ] },
  { filename: '2015-04-11-linux-network-settings.md',
    path: '/2015/04/11/linux-network-settings.html',
    title: 'Linux 高级网络配置',
    content: ' 1. 网卡高级命令 1. 查看物理网卡状态:    sudo mii-tool eth0 2. 查看物理网卡配置:     ethtool eth0 查看网卡特性',
    archieve: '2015/04',
    category: 'linux',
    tags: [ 'linux', 'ubuntu', 'network' ] },
  { filename: '2015-04-11-tmux.md',
    path: '/2015/04/11/tmux.html',
    title: 'Tmux 初识',
    content: ' Tmux: Terminal Multiplexer [linux安装tmux最新版脚本]({{site.url}}/scripts/install_tmux.sh) 1. 基本命令 1. 新建一个无名session:      tmux',
    archieve: '2015/04',
    category: 'linux',
    tags: [ 'linux. tmux' ] },
  { filename: '2015-04-12-php-codeigniter-study.md',
    path: '/2015/04/12/php-codeigniter-study.html',
    title: 'PHP CodeIgniter Framework Study',
    content: ' Course 1. Entrance To CodeIgniter 1. MVC简单介绍:     1. 解释:         M: Model (数据模型)         V: View (用户界面)',
    archieve: '2015/04',
    category: 'php',
    tags: [ 'php', 'ci', 'codeigniter' ] },
  { filename: '2015-04-14-php-codeigniter-study-2.md',
    path: '/2015/04/14/php-codeigniter-study-2.html',
    title: 'PHP CodeIgniter Framework Study 2',
    content: ' Course 5 SESSION机制和登陆验证 1. 利用SESSION进行登陆验证的原理:     1. 基本流程:         1. 客户端登陆: 用户输入用户名密码         2. 服务端验证: 验证用户名和密码',
    archieve: '2015/04',
    category: 'php',
    tags: [ 'php', 'session' ] },
  { filename: '2015-04-18-gulp-getting-started.md',
    path: '/2015/04/18/gulp-getting-started.html',
    title: 'gulp 入门',
    content: ' 参考 [不错的入门教程](http://www.html-js.com/article/Nimojs--frontend-development-1) [Gulp API 文档](http://www.gulpjs.com.cn/docs/api/) [Gulp 较完整的配置, 可以直接使用](http://markpop.github.io/2014/09/17/Gulp%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/) 一. 安装: gulp ',
    archieve: '2015/04',
    category: 'FrontEnd',
    tags: [ 'gulp', '前端', 'nodejs' ] },
  { filename: '2015-04-19-linux-mysql-character-set.md',
    path: '/2015/04/19/linux-mysql-character-set.html',
    title: 'linux mysql5.5 不能显示中文问题解决办法',
    content: ' 问题: mysql 不能正确显示中文 1. mysql5.5 默认字符集是 latin1 :     查看: show variables like \'character%\'; 2. 注意> 请确保在把character_set_database 和',
    archieve: '2015/04',
    category: 'linux',
    tags: [ 'linux', 'mysql', 'ubuntu' ] },
  { filename: '2015-04-27-docker-getting-started.md',
    path: '/2015/04/27/docker-getting-started.html',
    title: 'docker getting started',
    content: ' 参考 [Docker —— 从入门到实践](http://yeasy.gitbooks.io/docker_practice/content/) [Docker中文教程](http://letong.gitbooks.io/docker/content/) [Docker中文指南](http://richardhc.gitbooks.io/chinese_docker/content/) [官方 UserGuide](https://docs.docker.com/userguide/)',
    archieve: '2015/04',
    category: 'linux',
    tags: [ 'linux', 'docker' ] },
  { filename: '2015-04-28-docker-problems-set.md',
    path: '/2015/04/28/docker-problems-set.html',
    title: 'docker 问题汇总(持续更新)',
    content: ' 1. 非root身份运行Docker 你需要将自己添加到docker群组，那样才能以非root用户的身份来运行Docker 解决方法:     1. 将当前用户加入docker组: sudo usermod -a -G docker $USER     2. 创建个新docker组用户: sudo useradd --create-home --shell /bin/bash --user-group --groups docker,adm,sudo YOUR_USER_NAME',
    archieve: '2015/04',
    category: 'linux',
    tags: [ 'linux', 'docker' ] },
  { filename: '2015-05-03-linux-web-nginx-practice.md',
    path: '/2015/05/03/linux-web-nginx-practice.html',
    title: 'linux web nginx practice',
    content: ' 一、参考 [实验室](https://www.shiyanlou.com/courses/95) [官网](http://nginx.org/) 二、安装 nginx (ubuntu) 方法一: sudo apt-get install nginx',
    archieve: '2015/05',
    category: 'ServerEnd',
    tags: [ 'linux', 'nginx', 'web', 'lnmp' ] },
  { filename: '2015-05-19-revise-virtualenv-and-virtualenvwrapper.md',
    path: '/2015/05/19/revise-virtualenv-and-virtualenvwrapper.html',
    title: '重新捡起 virtualenv and virtualenvwrapper',
    content: ' 官方文档 [virtualenv](https://virtualenv.pypa.io/en/latest/) [virtualenvwrapper](https://virtualenvwrapper.readthedocs.org/en/latest/) 一 virtualenv `What`:',
    archieve: '2015/05',
    category: 'python',
    tags: [ 'python', 'virtualenv', 'virtualenvwrapper' ] },
  { filename: '2015-06-01-css3-getting-started.md',
    path: '/2015/06/01/css3-getting-started.html',
    title: 'CSS3 基础',
    content: ' 一、初识CSS3 1.1 在编写CSS3样式时，不同的浏览器可能需要不同的前缀.|  前缀  |  浏览器  ||:------:|:--------:||  -webkit  |  chrome和safari  |',
    archieve: '2015/06',
    category: 'FrontEnd',
    tags: [ 'css', 'css3' ] },
  { filename: '2015-06-18-mysql-learning-notes-1-DDL.md',
    path: '/2015/06/18/mysql-learning-notes-1-DDL.html',
    title: 'MySQL (一) 数据库定义语言(DDL) CREATE/DROP/ALTER',
    content: ' MYSQL 之 数据定义语言(结构定义): Data Definition Language 第一: 创建CREATE 1 创建数据库/模式: CREATE DATABASE/SCHEME 语法```Syntax:',
    archieve: '2015/06',
    category: 'SQL',
    tags: [ 'MySQL', 'SQL', '数据库' ] },
  { filename: '2015-06-18-mysql-learning-notes-2-DML.md',
    path: '/2015/06/18/mysql-learning-notes-2-DML.html',
    title: 'MySQL (二) 数据操作语言(DML): INSERT DELETE UPDATE SELECT',
    content: ' 数据操纵语言(DML): Data Manipulate Language 一. INSERT 1 语法```Syntax 1:',
    archieve: '2015/06',
    category: 'SQL',
    tags: [ 'mysql', 'SQL', '数据库', 'INSERT', 'DELETE', 'UPDATE', 'SELECT' ] },
  { filename: '2015-06-20-mysql-learning-notes-3-DML-2.md',
    path: '/2015/06/20/mysql-learning-notes-3-DML-2.html',
    title: 'MySQL (三) 数据操作语言DML: JOIN/UNION/TRUNCATE ...',
    content: ' MYSQL 数据操作语法: Data Manipulate Language 一、JION 语法 1. JOIN Syntax```MySQL支持以下JOIN语法，主要用于SELECT语句的table_references部分',
    archieve: '2015/06',
    category: 'SQL',
    tags: [ 'MySQL', 'SQL', '数据库' ] },
  { filename: '2015-06-20-mysql-learning-notes-4-DCL.md',
    path: '/2015/06/20/mysql-learning-notes-4-DCL.html',
    title: 'MySQL (四) 数据控制语言(DCL): CREATE USER/GRANT/REVOKE ..',
    content: ' MySQL 数据库管理语句: 数据控制语言(DCL): Data Control Language 1. CREATE/DROP USER2. GRANT + REVOKE3. SET PASSWORD4. SHOW ...',
    archieve: '2015/06',
    category: 'SQL',
    tags: [ 'MySQL', 'SQL', '数据库', '数据库管理语句' ] },
  { filename: '2015-06-21-mysql-learning-notes-5-FUNCTION.md',
    path: '/2015/06/21/mysql-learning-notes-5-FUNCTION.html',
    title: 'MySQL (五) 函数和操作符',
    content: ' 导航 一、操作符 1 操作符优先级|操作符|优先级||:-----|:----:|',
    archieve: '2015/06',
    category: 'SQL',
    tags: [ 'MySQL', 'SQL', '数据库' ] },
  { filename: '2015-07-05-html-css-basic-1.md',
    path: '/2015/07/05/html-css-basic-1.html',
    title: 'Html CSS 基础',
    content: ' 第三章 html表格应用和布局 table 标签\t tr td th\t thead tbody tfoot (逻辑分类)',
    archieve: '2015/07',
    category: 'FrontEnd',
    tags: [ 'html', 'css', 'web-front' ] },
  { filename: '2015-07-07-recover-grub.md',
    path: '/2015/07/07/recover-grub.html',
    title: '恢复 Grub 引导',
    content: ' 问题描述: 原本多系统(Win + Linuxs)，但windows坏了，要重装，但想保留Ubuntu等 安装完Win8后, Grub没了，想要恢复Grub引导 方法(推荐): LiveCD 进入(大部分Linux发行版都行) 步骤:',
    archieve: '2015/07',
    category: 'linux',
    tags: [ 'linux', 'grub', 'ubuntu' ] },
  { filename: '2015-07-08-oracle-database.md',
    path: '/2015/07/08/oracle-database.html',
    title: 'Oracle Database',
    content: ' 一、Orcle Database 数据库客户端的安装 安装 概述     数据库 <-1-----n-> 表空间     表空间 <-1-----n-> 表+索引+视图等',
    archieve: '2015/07',
    category: 'SQL',
    tags: [ 'sql', 'oracle' ] },
  { filename: '2015-07-09-css-layout-clear-float-method.md',
    path: '/2015/07/09/css-layout-clear-float-method.html',
    title: 'CSS 布局解决浮动问题',
    content: ' 一、问题(Question): 浮动脱离文档流，导致无法撑开DIV解决: 二、解决办法(Solution): 在父DIV中加入     1 声明该DIV的伪类选择器divName::after (divName只是标识，泛指能找到DIV的选择器名)',
    archieve: '2015/07',
    category: 'FrontEnd',
    tags: [ 'CSS', 'web-front' ] },
  { filename: '2015-07-10-eclipse-keymaps.md',
    path: '/2015/07/10/eclipse-keymaps.html',
    title: 'Eclipse KeyMaps',
    content: ' [资源来自网友整理](http://rongmayisheng.com/post/eclipse%E6%9C%80%E6%9C%89%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%95%B4%E7%90%86) 一、快捷键修改: 菜单栏中Window–>Preferences–>General–>Keys来查看和修改快捷键绑定。 二、编辑 Ctrl+1 快速修复（最经典的快捷键,就不用多说了，可以解决很多问题，比如import类、try catch包围等）',
    archieve: '2015/07',
    category: 'KeyMaps',
    tags: [ 'KeyMaps', 'Eclipse', 'Java. JSP' ] },
  { filename: '2015-07-10-intellij-idea-keymaps.md',
    path: '/2015/07/10/intellij-idea-keymaps.html',
    title: 'IntelliJ Idea 快捷键(KeyMaps)',
    content: ' 一、相关文件 [官方，快捷键全](https://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard.pdf) 二、必须记住 `Ctrl+ShiftSpace` 自动补全代码 `Shift+Enter`: 创建新行并跳到下一行',
    archieve: '2015/07',
    category: 'KeyMaps',
    tags: [ 'KeyMaps', 'IntelliJ', 'IntelliJ Idea' ] },
  { filename: '2015-07-10-java-getting-started.md',
    path: '/2015/07/10/java-getting-started.html',
    title: 'Java Getting Started',
    content: ' 一、基础 1 八个基本数据类型     1 `boolean`     2 `char`     3 `byte`',
    archieve: '2015/07',
    category: 'Java',
    tags: [ 'Java', 'JSP 基础' ] },
  { filename: '2015-07-11-linux-netwok-bridge.md',
    path: '/2015/07/11/linux-netwok-bridge.html',
    title: 'Linux NetWok Bridge(创建网桥)',
    content: ' [Wiki](https://wiki.archlinux.org/index.php/Network_bridge) 一、通过iproute2/ip创建网桥 bridge_name 1 网桥创建／删除:     创建:         `ip link add name bridge_name type bridge`',
    archieve: '2015/07',
    category: 'Linux',
    tags: [ 'Linux', 'Network', 'Bridge' ] },
  { filename: '2015-07-17-jsp-getting-started.md',
    path: '/2015/07/17/jsp-getting-started.html',
    title: 'Java Web (一) JSP 基础',
    content: ' 四、JSP内置对象 4.4 Session的生命周期     1 创建:         当客户端第一次访问某个jsp或者Servlet时候，服务器会为当前会话创建一个SessionID, 每次客户端向服务器发送请求是，都会将SessionId携带过去，服务端会对此SessionID进行校验.     2 活动:',
    archieve: '2015/07',
    category: 'Java',
    tags: [ 'Java', 'JSP', 'Web' ] },
  { filename: '2015-07-19-java-servlet.md',
    path: '/2015/07/19/java-servlet.html',
    title: 'Java Web (二) Servlet 基础',
    content: ' 一、什么是Servlet 1.1 定义     Servlet是在服务器上运行的小程序。一个Servlet就是一个Java类，并且可以通过"请求-响应"编程模型来访问这个主流在服务器内存里的Servlet程序. 二、Tomcat 容器等级 2.1 Tomcat的容器分为四个等级，Servlet的容器管理Context容器，一个Context对应一个Web工程.',
    archieve: '2015/07',
    category: 'Java',
    tags: [ 'Java', 'Servlet', 'JSP', 'Web' ] },
  { filename: '2015-07-21-java-web-3---filter.md',
    path: '/2015/07/21/java-web-3---filter.html',
    title: 'Java Web (三) 过滤器(Filter)',
    content: ' 一、过滤器简介 1 含义:     Web过滤器: (过滤源 + 过滤规则 + 过滤结果) 是一个服务器端的组件，它可以截取用户端的请求与响应信息,并对这些信息过滤. 二、过滤器的工作原理和生命周期 1 工作原理:',
    archieve: '2015/07',
    category: 'Java',
    tags: [ 'Java', 'Web', 'Filter' ] },
  { filename: '2015-07-30-hadoop-getting-started.md',
    path: '/2015/07/30/hadoop-getting-started.html',
    title: 'Hadoop Getting Started',
    content: ' 一、关于 Hadoop 1 Hadoop是什么:     Hadoop是Apache的开源的分布式存储以及分布式计算平台     [官网](http://hadoop.apache.org) 2 Hadoop的两个核心组成:',
    archieve: '2015/07',
    category: 'Linux',
    tags: [ 'Hadoop', 'Linux' ] },
  { filename: '2015-08-01-great-photos-wall.md',
    path: '/2015/08/01/great-photos-wall.html',
    title: 'Great Photos Wall',
    content: ' 一、知识点 1 `box-shadow`:     Function: 给元素边框添加阴影效果     Syntax: `box-shadow: offset-x offset-y blur-radius [spread-radius] color [inset];`         offset-x: X轴偏移量',
    archieve: '2015/08',
    category: 'FrontEnd',
    tags: [ 'css', 'css3' ] },
  { filename: '2015-08-04-css-center.md',
    path: '/2015/08/04/css-center.html',
    title: 'CSS 中的居中',
    content: ' 一、文本(字)水平居中     Condition:          文本、图片、或者强制行级元素等`行内(inline, inline-block)元素`     Object:         给要居中元素的父类元素添加',
    archieve: '2015/08',
    category: 'FrontEnd',
    tags: [ 'CSS' ] },
  { filename: '2015-08-12-connect-local-server-by-ssh-reverse-tunnel.md',
    path: '/2015/08/12/connect-local-server-by-ssh-reverse-tunnel.html',
    title: '如何通过反向SSH隧道访问NAT后面的Linux服务器',
    content: ' [参考整理](https://linux.cn/article-5975-1.html) 基本概念 一、反向SSH隧道简介 1 是什么:     隧道协议(Tunneling protocol):',
    archieve: '2015/08',
    category: 'linux',
    tags: [ 'linux', 'ssh', 'nat' ] },
  { filename: '2015-08-15-sass-getting-started.md',
    path: '/2015/08/15/sass-getting-started.html',
    title: '开始用 SASS 代替 CSS',
    content: ' [SASS教程](http://www.w3cplus.com/sassguide) 一、文件后缀名 1 `.sass`     使用缩进, 不使用分号和大括号 2 `.scss`',
    archieve: '2015/08',
    category: 'FrontEnd',
    tags: [ 'css', 'sass' ] },
  { filename: '2015-08-23-linux-command-awk.md',
    path: '/2015/08/23/linux-command-awk.html',
    title: 'Linux Command: awk',
    content: ' 一、简介 `awk` 是处理文本数据的好工具。 相比于`sed`常用于一整行的处理，`awk`则倾向于将一行分成数个"字段"来处理. `awk`适合处理小型的文本数据. 二、语法',
    archieve: '2015/08',
    category: 'Linux',
    tags: [ 'Linux', 'Awk' ] },
  { filename: '2015-09-11-work-track.md',
    path: '/2015/09/11/work-track.html',
    title: 'work track',
    content: ' Week 1 (2016.09.05 - 2016.09.11) 1 Done     @1 遵循设计风格，使用React重写UI组件，目的是为了规范化、简化以后开发，这是基石;     @2 和设计沟通，讨论符合Web开发的设计样式等, 并将其实现     @3 和Web API 后端沟通，简要讨论API的设计，希望API设计更加符合前后端对接',
    archieve: '2015/09',
    category: '',
    tags: [ '' ] },
  { filename: '2015-09-28-build-openwrt-for-hg255d.md',
    path: '/2015/09/28/build-openwrt-for-hg255d.html',
    title: '为HuaWei HG255D 路由器编译 Openwrt 固件',
    content: ' 参考资料 [官方文档](http://wiki.openwrt.org/doc/start)     [Easy Build](http://wiki.openwrt.org/doc/howto/easy.build)     [Image Generator](http://wiki.openwrt.org/doc/howto/obtain.firmware.generate)     [SDK](http://wiki.openwrt.org/doc/howto/obtain.firmware.sdk)',
    archieve: '2015/09',
    category: 'linux',
    tags: [ 'linux', 'openwrt', 'hg255d', 'router' ] },
  { filename: '2015-10-04-One-out-of-eight-kinds-of-algorithm-1-insertsort.md',
    path: '/2015/10/04/One-out-of-eight-kinds-of-algorithm-1-insertsort.html',
    title: '八种排序算法之1 直接插入排序(StraightInsertSort)',
    content: ' 一、基本思想 每次将一个待排序的记录a[i]，插入到前面已经排好序的子序列a[0...i-1]中的适当位置, 知道全部记录插入完成为止(i==n为止). 复杂度 时间复杂度:     O(n^2)',
    archieve: '2015/10',
    category: 'algorithm',
    tags: [ 'insertsort', 'sort', 'algorithm' ] },
  { filename: '2015-10-05-one-out-of-eight-kinds-of-algorithm-1-1-halfinsertsort.md',
    path: '/2015/10/05/one-out-of-eight-kinds-of-algorithm-1-1-halfinsertsort.html',
    title: '八种排序算法之1-2 折半插入排序(Binary Insert Sort)',
    content: ' 一、基本思想 在[直接插入排序]({{site.url}}/2015/10/04/One-out-of-eight-kinds-of-algorithm-1-insertsort.html)的基础上，与其通过从后往前一一比较(或比较交换交换), 折半插入排序则利用`折半查找(BinarySearch)`的(low, high)确定带插入的数字的位置hight+1，是比middle小(左半部分)还是大(右半部分) 二、基础: 折半查找法+直接插入排序```c// 折半查找(BinarySearch)',
    archieve: '2015/10',
    category: 'algorithm',
    tags: [ 'binaryinsertsort', 'sort', 'algorithm' ] },
  { filename: '2015-10-05-one-out-of-eight-kinds-of-algorithm-2-shellsort.md',
    path: '/2015/10/05/one-out-of-eight-kinds-of-algorithm-2-shellsort.html',
    title: '八种排序算法之2 希尔排序(Shell Sort)',
    content: ' 一、基本思想 希尔排序是插入排序的一种改进算法, 是非稳定排序.```bash    先将整个代拍元素序列分割成若干个子序列(由相隔某个"增量"的元素组成的)分别进行直接插入排序,     然后一次缩减增量再进行排序，',
    archieve: '2015/10',
    category: 'algorithm',
    tags: [ 'shellsort', 'sort', 'algorithm' ] },
  { filename: '2015-10-05-one-out-of-eight-kinds-of-algorithm-3-bubblesort.md',
    path: '/2015/10/05/one-out-of-eight-kinds-of-algorithm-3-bubblesort.html',
    title: '八种排序算法之3 冒泡排序(Bubble Sort)',
    content: ' 一、基本思想 由字面意思:      鱼儿吐泡般，将轻的泡往上浮, i个泡总共需要i-1轮     j从len-1(最后一个元素)到每次都有一个相对最轻的泡到相对顶部     这个过程隐含将重的泡往下挤, 直到所有轻的泡都浮在重的泡上面',
    archieve: '2015/10',
    category: 'algorithm',
    tags: [ 'bubblesort', 'sort', 'algorithm' ] },
  { filename: '2015-10-05-one-out-of-eight-kinds-of-algorithm-4-quicksort.md',
    path: '/2015/10/05/one-out-of-eight-kinds-of-algorithm-4-quicksort.html',
    title: '八种排序算法之4 快速排序(Quick Sort)',
    content: ' 一、基本思想 (`挖坑填数` + `分治法(Divide and Conquer Method)`) 1、先从数列中取出一个数作为基准数 2、分区过程，将比这个数大或者等于的数全放到它右边，小它的数全部放到它的左边 3、再对左右区间重复第二步，知道各区间只有一个数.',
    archieve: '2015/10',
    category: 'algorithm',
    tags: [ 'quicksort', 'sort', 'algorithm' ] },
  { filename: '2015-10-05-one-out-of-eight-kinds-of-algorithm-5-selectsort.md',
    path: '/2015/10/05/one-out-of-eight-kinds-of-algorithm-5-selectsort.html',
    title: '八种排序算法之5 选择排序(Select Sort)',
    content: ' 一、基本思想 选择排序和冒泡排序是差不多的一种排序. 和冒泡选择不一样的的是, `选择排序只有在确定了最小(或最大)的数据之后，才会发生交换.` 二、基础 [冒泡排序]({{site.url}}/2015/10/05/one-out-of-eight-kinds-of-algorithm-3-bubblesort.html)',
    archieve: '2015/10',
    category: 'algorithm',
    tags: [ 'selectsort', 'sort', 'algorithm' ] },
  { filename: '2015-10-05-one-out-of-eight-kinds-of-algorithm-6-heapsort.md',
    path: '/2015/10/05/one-out-of-eight-kinds-of-algorithm-6-heapsort.html',
    title: '八种排序算法之6 堆排序(Heap Sort)',
    content: ' 一、基本思想 先堆化，然后利用堆的性质排序.     最大堆: 根节点最大     最小堆: 根节点最小 二、基础: 堆(Heap)',
    archieve: '2015/10',
    category: 'algorithm',
    tags: [ 'heapsort', 'sort', 'algorithm' ] },
  { filename: '2015-10-05-one-out-of-eight-kinds-of-algorithm-7-mergesort.md',
    path: '/2015/10/05/one-out-of-eight-kinds-of-algorithm-7-mergesort.html',
    title: '八种排序算法之7 归并排序(Merge Sort)',
    content: ' 一、基本思想 归并排序依赖于递归合并操作, 即将一个数组递归分成两个子数组并分别进行排序,，然后将这两个有序数组排序. 二、基础: `合并两个有序列表` 合并有序数列的效率     `O(n)`',
    archieve: '2015/10',
    category: 'algorithm',
    tags: [ 'mergesort', 'sort', 'algorithm' ] },
  { filename: '2015-10-08-divide-and-conquer-method.md',
    path: '/2015/10/08/divide-and-conquer-method.html',
    title: '分治算法(Divide And Conquer Method)',
    content: ' 重要性 `要我说呢，这是算法中基础中的基础，但并不是不重要，相反，非常重要，而且有一定理解难度，至少对初学者，或者我来说，完全理解并灵活运用，绝非易事。` `所以，这个分治法(Divide-And-Conquer-Method)得反复看.尤其是递归的时候，必须反思反思分治法.` 一、基本思路 1.将问题的实例分为几个较小的实例，最好具有相等规模(事实上,一般说分为`2个实例`居多，并且注意是`递归的分.`);',
    archieve: '2015/10',
    category: 'algorithm',
    tags: [ 'divide-and-conquer', 'algorithm' ] },
  { filename: '2015-10-08-logical-and-physical-structure-in-algorithm.md',
    path: '/2015/10/08/logical-and-physical-structure-in-algorithm.html',
    title: '数据结构中的逻辑结构与物理结构',
    content: ' 一、理解(重点) 比如数据结构中的`树`的`存储`     `逻辑结构`: 很形象啊，在你脑海里不就是一棵树吗?     `物理结构`: 这棵`树`在物理内存中可以用数组存储(`顺序存储`), 也可以在内存中用链表存储(`链式存储`); 二、课本原理',
    archieve: '2015/10',
    category: 'algorithm',
    tags: 
     [ 'datastructure',
       'algorithm',
       'logical structure',
       'physical structure' ] },
  { filename: '2015-10-17-stack-arithmetic-expression-convertion.md',
    path: '/2015/10/17/stack-arithmetic-expression-convertion.html',
    title: '栈应用 - 中缀表达式->后缀表达式',
    content: ' 一、原理 二、步骤 Step 1: 从左向右开始扫描中缀表达式 Step 2: 如果是数字或字母，直接输出 或者 存取在其他地方 Step 3: 遇到运算符时, 3 IF',
    archieve: '2015/10',
    category: 'algorithm',
    tags: [ 'algorithm', '数据结构', 'stack' ] },
  { filename: '2015-10-17-stack-bracket-match.md',
    path: '/2015/10/17/stack-bracket-match.html',
    title: '栈应用 - 括号匹配',
    content: ' 一、原理 很简单，遇到左括号用栈存起来，遇到右括号就从栈取出一个比较即可. 特殊情况:     在栈空的情况下遇到右括号肯定不匹配;     在括号扫描结束的情况下，栈不为空，肯定不匹配.',
    archieve: '2015/10',
    category: 'algorithm',
    tags: [ 'algorithm', '数据结构', 'stack' ] },
  { filename: '2016-01-11-django-19-issues.md',
    path: '/2016/01/11/django-19-issues.html',
    title: 'Django 1.9 Issues',
    content: ' Issue 1 Django MySQLdb Detail:     `No module named \'MySQLdb\'` Solved:     `pip install mysqlclient` [github](https://github.com/PyMySQL/mysqlclient-python)',
    archieve: '2016/01',
    category: 'python',
    tags: [ 'django', 'python', 'web' ] },
  { filename: '2016-01-25-setup-vsftpd-virtual-users-and-their-home-directory.md',
    path: '/2016/01/25/setup-vsftpd-virtual-users-and-their-home-directory.html',
    title: 'Vsftpd 虚拟用户及其家目录的配置',
    content: ' 参考 [How to setup virtual users for vsftpd with access to a specific sub directory?](http://askubuntu.com/questions/575523/how-to-setup-virtual-users-for-vsftpd-with-access-to-a-specific-sub-directory) [在ubuntu下vsftpd建立虚拟用户的详解](http://blog.csdn.net/liangxanhai/article/details/8157922) 一.OS `Ubuntu 14.04`',
    archieve: '2016/01',
    category: 'linux',
    tags: [ 'linux', 'ftp', 'vsftpd', '虚拟用户', 'virtual user' ] },
  { filename: '2016-01-29-nginx-prohibites-the-access-of-unbounded-domains.md',
    path: '/2016/01/29/nginx-prohibites-the-access-of-unbounded-domains.html',
    title: 'Nginx 禁止未绑定域名(包括IP)范围',
    content: ' 问题 `随意绑定域名到IP, 都可以访问；但是不想被其他未指定的域名绑定, 返回404或者其他.` 解决方法(一) 编辑 nginx.conf 或者 自己配置的server文件 在其他server里指定server_name, 比如: colesmith.space;',
    archieve: '2016/01',
    category: 'ServerEnd',
    tags: [ 'nginx' ] },
  { filename: '2016-04-29-linux-develop-useful-tools-set.md',
    path: '/2016/04/29/linux-develop-useful-tools-set.html',
    title: 'Linux 开发有用的工具集',
    content: ' 一、网络 流量分析 HTTP 1 [httpry](https://linux.cn/article-4148-1.html)     定义: Linux 命令行下嗅探 HTTP 流量的工具',
    archieve: '2016/04',
    category: 'linux',
    tags: [ 'linux', 'tools', 'network', 'server' ] },
  { filename: '2016-04-29-program-docs-search-tools.md',
    path: '/2016/04/29/program-docs-search-tools.html',
    title: 'program docs search tools',
    content: ' 文档查询工具 [Dash](https://kapeli.com/dash) `Mac` [Zeal](https://zealdocs.org/download.html) `Cross Platform` 快速查询工具 [Alfred]',
    archieve: '2016/04',
    category: '',
    tags: [ 'linux', 'doc', 'dash', 'zeal' ] },
  { filename: '2016-06-14-web-https.md',
    path: '/2016/06/14/web-https.html',
    title: '全站 HTTPS 实践',
    content: ' 参考 [创业者HTTPS实践](http://www.seabornlee.cn/post/bian-cheng/2016-01-03-enable-https-for-codignstyle-cn) [Https使用的那些事儿](http://zangxixi.xyz/post/practise/2015-12-05) [Let’s Encrypt网站启用https以及nginx配置安全优化](https://www.embbnux.com/2015/12/29/letsencrypt_with_nginx_config_for_wordpress/) [本博客 Nginx 配置之完整篇](https://imququ.com/post/my-nginx-conf.html)',
    archieve: '2016/06',
    category: 'ServerEnd',
    tags: [ 'web' ] },
  { filename: '2016-07-12-use-with-express.md',
    path: '/2016/07/12/use-with-express.html',
    title: 'Express 项目基础架构及使用文档',
    content: ' @1 项目文件结构 ![ExpressProjectBasicFileStructure.png](/images/ExpressProjectBasicFileStructure.png) 解析   1 `app.js`: 项目入口文件   2 `app`: 项目目录',
    archieve: '2016/07',
    category: 'nodejs',
    tags: [ 'nodejs', 'web', 'server' ] },
  { filename: '2016-11-20-getting-started-with-svg.md',
    path: '/2016/11/20/getting-started-with-svg.html',
    title: 'SVG 入门和进阶',
    content: ' SVG基础 一、定义与优势: `SVG` - `Scalable Vector Graphics` 定义   1 可伸缩矢量图   2 使用XML格式定义图形',
    archieve: '2016/11',
    category: 'FrontEnd',
    tags: [ 'svg', 'front-end' ] },
  { filename: '2016-12-03-react-proptypes-and-defaultprops.md',
    path: '/2016/12/03/react-proptypes-and-defaultprops.html',
    title: 'React - PropTypes and DefaultProps',
    content: ' 一 PropsTypes 取值 1 常用   1 字符串: `PropTypes.string`   2 数字: `PropTypes.number`   3 函数: `PropTypes.func`',
    archieve: '2016/12',
    category: 'FrontEnd',
    tags: [ 'js', 'react', 'props' ] },
  { filename: '2017-01-17-think-more-about-api-design.md',
    path: '/2017/01/17/think-more-about-api-design.html',
    title: '对前后端API设计的一点思考 -- Status Code',
    content: ' 一、问题 首先，扯点大方向: API规范   目前市面是规范比较多，大家都有自己的想法，这没错，但是遇到团队协作或者前后端交接的事件，各自遵循自己的规范可不见得是什么好事啊;   这个问题不仅是前后端对接，甚至是前端团队成员协调，都会出现一些不认同，或者要花很多的沟通成本，这个时间浪费是没有必要的，这是初衷。 其次, 格式问题: ',
    archieve: '2017/01',
    category: 'FrontEnd',
    tags: [ 'API', 'Http Status' ] },
  { filename: '2017-01-17-understand-react-lifecycle.md',
    path: '/2017/01/17/understand-react-lifecycle.html',
    title: '正确掌握React 生命周期(Lifecycle)',
    content: ' 前言 首先, 当面对一些问题:   1 React 用了这么久，经常遇到的问题是`setState`在这里写合适吗？   2 为什么`setState`写在这里造成了重复渲染多次？   3 为什么你的`setState`用的这么乱?',
    archieve: '2017/01',
    category: 'FrontEnd',
    tags: [ 'FrontEnd', 'React' ] },
  { filename: '2020-12-31-excellent-programming-essays-all.md',
    path: '/2020/12/31/excellent-programming-essays-all.html',
    title: '值得一读的文章',
    content: ' 2017 年 4 月 2017-04-10   [优雅高效的免费在线APP原型工具](http://xiaopiu.com)   [产品原型工具](https://next.36kr.com/posts/collections/1)',
    archieve: '2020/12',
    category: 'Reading',
    tags: [ 'collections' ] } ]
